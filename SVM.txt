SVM
from sklearn.svm import SVC
from sklearn import svm
import numpy as np

X=np.array([[3,4],[1,4],[2,3],[6,-1],[7,-1],[5,-3]])
y=np.array([-1,-1,-1,1,1,1])

l=SVC(C=1e5,kernel='linear')
l.fit(X,y)

print('w = ',l.coef_)
print('b = ',l.intercept_)
print('Indices of support vectors= ',l.support_)
print('Support vectors= ')
print(l.support_vectors_)
print('No. of support vectors fro each class= ',l.n_support_)
print('coefficient of support vectors in decision function= ',np.abs(l.dual_coef_))
import pandas as pd
data=pd.read_csv('Lab 08 glass.csv')
data.head()
x=data.drop('Type',axis=1)
y=data.Type
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)
linear=svm.SVC(kernel='linear')
linear.fit(x_train,y_train)
print(linear.support_vectors_)
print(linear.n_support_)y_pred=linear.predict(x_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,y_pred))
from sklearn.metrics import confusion_matrix
print(confusion_matrix(y_test,y_pred))
from sklearn.metrics import classification_report
print(classification_report(y_test,y_pred))
#with different kernels
model1=SVC(kernel='sigmoid')
model2=SVC(kernel='poly')
model3=SVC(kernel='rbf')
model1.fit(x_train,y_train)
model2.fit(x_train,y_train)
model3.fit(x_train,y_train)
y_pred1=model1.predict(x_test)
y_pred2=model2.predict(x_test)
y_pred3=model3.predict(x_test)
print(accuracy_score(y_test,y_pred1))
print(accuracy_score(y_test,y_pred2))
print(accuracy_score(y_test,y_pred3))